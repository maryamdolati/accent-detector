# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SN9kR21COGi0R67DYMP2UuqxN8WJ9T2U
"""


# app.py
import streamlit as st
import whisper
import os
import yt_dlp
import tempfile
from langdetect import detect
from moviepy.editor import VideoFileClip

st.title("English Accent Detector \U0001F1EC\U0001F1E7\U0001F1FA\U0001F1F8\U0001F1E6\U0001F1FA")
st.write("Upload a video URL (YouTube or MP4), and we will detect the speaker's English accent!")

# Load Whisper
@st.cache_resource
def load_model():
    return whisper.load_model("base")

model = load_model()

# Download video and extract audio
def download_and_extract_audio(url):
    with tempfile.NamedTemporaryFile(suffix=".wav", delete=False) as tmp_audio:
        audio_path = tmp_audio.name

    ydl_opts = {
        'format': 'bestaudio/best',
        'outtmpl': 'downloaded_audio.%(ext)s',
        'postprocessors': [{
            'key': 'FFmpegExtractAudio',
            'preferredcodec': 'wav',
            'preferredquality': '192',
        }],
    }

    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        ydl.download([url])

    os.rename("downloaded_audio.wav", audio_path)
    return audio_path

# Detect accent based on keywords
def estimate_accent(text):
    text = text.lower()
    if "mate" in text or "g'day" in text:
        return "Australian", 85
    elif "gonna" in text or "wanna" in text or "gotta" in text:
        return "American", 80
    elif "shall" in text or "cheers" in text:
        return "British", 75
    else:
        return "Uncertain English", 60

url = st.text_input("Enter a public video URL (e.g., YouTube or MP4 link):")

if st.button("Analyze Accent") and url:
    try:
        st.info("Downloading and extracting audio...")
        audio_file = download_and_extract_audio(url)

        st.success("Transcribing with Whisper...")
        result = model.transcribe(audio_file)
        transcript = result["text"]

        lang = detect(transcript)
        if lang != 'en':
            st.error("Detected language is not English.")
        else:
            accent, confidence = estimate_accent(transcript)
            st.header("Results")
            st.write(f"**Transcript:** {transcript[:400]}...")
            st.write(f"**Detected Accent:** {accent}")
            st.write(f"**Confidence:** {confidence}%")

        os.remove(audio_file)
    except Exception as e:
        st.error(f"An error occurred: {e}")

!pip install langdetect
